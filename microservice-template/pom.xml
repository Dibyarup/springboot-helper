<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>edu.dibyarup.springboot.lib</groupId>
	<artifactId>microservice-template</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>microservice-template</name>
	<description>Microservice Template</description>

	<scm>
		<developerConnection>scm:git:https://github.com/Dibyarup/springboot-helper/${project.artifactId}</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<!-- <distributionManagement>
		<repository>
			<id>releases</id>
			<name>Internal 
		Releases</name>
			<url>repo_path</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>repo_path</url>
		</snapshotRepository>
	</distributionManagement> -->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.version>${project.version}</docker.image.version>

		<excludedGroups />
		<stage>junit</stage>

		<sonar.jacoco.reportPaths>
			target/jacoco/jacoco-junit.exec,
			target/jacoco/jacoco-component.exec,
			target/jacoco/jacoco-contract.exec,
			target/jacoco/jacoco-integration.exec,
			target/jacoco/jacoco-load.exec,
			target/jacoco/jacoco-e2e.exec
		</sonar.jacoco.reportPaths>

		<skipTests>false</skipTests>
		<skipITs>false</skipITs>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<spring-cloud-contract.version>2.0.2.RELEASE</spring-cloud-contract.version>
		<ojdbc8.version>12.2.0.1</ojdbc8.version>
		<wiremock.version>2.19.0</wiremock.version>
		<logstash-logback-encoder.version>5.2</logstash-logback-encoder.version>
		<dependency-check-maven.version>4.0.1</dependency-check-maven.version>
		<maven-toolchains-plugin.version>1.1</maven-toolchains-plugin.version>
		<jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
		<pit.version>1.4.6</pit.version>
	</properties>

	<profiles>
		<profile>
			<id>component</id>
			<properties>
				<skipTests>true</skipTests>
				<skipITs>false</skipITs>
				<!-- <excludedGroups> To exclude other test classes, provide full
					classpath
				</excludedGroups> -->
				<stage>component</stage>
			</properties>
		</profile>
		<profile>
			<id>mutation-incremental</id>
			<properties>
				<skipTests>true</skipTests>
				<skipITs>true</skipITs>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<configuration>
							<threads>1</threads>
							<historyInputFile>.pit/pitest-history-${project.artifactId}</historyInputFile>
						</configuration>
						<executions>
							<execution>
								<id>pit-execute-mutation-coverage</id>
								<phase>verify</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation-baseline</id>
			<properties>
				<skipTests>true</skipTests>
				<skipITs>true</skipITs>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<configuration>
							<threads>1</threads>
							<historyOutputFile>.pit/pitest-history-${project.artifactId}</historyOutputFile>
						</configuration>
						<executions>
							<execution>
								<id>pit-execute-mutation-coverage</id>
								<phase>verify</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-dependencies</artifactId>
				<version>${spring-cloud-contract.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>${logstash-logback-encoder.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-standalone</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-contract-wiremock</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>microservice-template</finalName>
		<plugins>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<dateFormat>MM-dd-yyyy '@' HH:mm:ss</dateFormat>
					<includeOnlyProperties>
						<includeOnlyProperty>^git.commit.id$</includeOnlyProperty>
						<includeOnlyProperty>git.commit.time</includeOnlyProperty>
						<includeOnlyProperty>git.branch</includeOnlyProperty>
						<includeOnlyProperty>git.commit.message.full</includeOnlyProperty>
					</includeOnlyProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<useSystemClassLoader>false</useSystemClassLoader>
					<perCoreThreadCount>false</perCoreThreadCount>
					<forkCount>2.0C</forkCount>
					<reuseForks>true</reuseForks>
					<threadCount>20</threadCount>
					<runOrder>random</runOrder>
					<!-- <excludes>
						<exclude>Integration Test Classes default suffix IT</exclude>
					</excludes> -->
				</configuration>
			</plugin>
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<failIfNoTests>false</failIfNoTests>
					<skipTests>${skipITs}</skipTests>
					<excludedGroups>${excludedGroups}</excludedGroups>
					<runOrder>random</runOrder>
					<includes>
						<include>Integration Test Classes default suffix IT</include>
					</includes>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<profiles>
						<profile>local</profile>
						<profile>tst</profile>
					</profiles>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco/jacoco-${stage}.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco/jacoco-${stage}.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-${stage}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-maven-plugin</artifactId>
				<version>${spring-cloud-contract.version}</version>
				<extensions>true</extensions>
				<configuration>
					<packageWithBaseClasses>Base Class Package</packageWithBaseClasses>
					<skipTests>${skipITs}</skipTests>
				</configuration>
			</plugin> -->
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pit.version}</version>
					<configuration>
						<failWhenNoMutations>false</failWhenNoMutations>
						<outputFormats>
							<outputFormat>HTML</outputFormat>
							<outputFormat>XML</outputFormat>
						</outputFormats>
						<!-- <excludedClasses>
							<param>Exclude Config classes</param>
						</excludedClasses>
						<excludedTestClasses>
							<param>Exclude Integration Test classes</param>
						</excludedTestClasses> -->
						<threads>1</threads>
						<timeoutFactor>3</timeoutFactor>
						<avoidCallsTo>
							<avoidCallsTo>java.util.logging</avoidCallsTo>
							<avoidCallsTo>org.apache.log4j</avoidCallsTo>
							<avoidCallsTo>org.slf4j</avoidCallsTo>
							<avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
						</avoidCallsTo>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
